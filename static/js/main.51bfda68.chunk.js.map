{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","img","className","src","alt","CardList","Robot","cardArray","map","user","index","SearchBox","eventCari","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","useState","robot","setRobot","searchField","setSearchField","count","setCount","useEffect","fetch","then","response","json","users","console","log","filterRobots","filter","toLowerCase","includes","length","onClick","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACrBC,EAAG,+BAA2BD,EAA3B,iBACT,OACE,sBAAKE,UAAU,mDAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAI,SACnB,gCACE,6BAAKN,IACL,4BAAIC,WCOGM,EAdE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACZC,EAAYD,EAAME,KAAI,SAACC,EAAMC,GACjC,OACE,cAAC,EAAD,CAEEV,GAAIM,EAAMI,GAAOV,GACjBF,KAAMQ,EAAMI,GAAOZ,KACnBC,MAAOO,EAAMI,GAAOX,OAHfW,MAOX,OAAO,8BAAMH,KCCAI,EAdG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,OACLf,KAAK,SACLgB,YAAY,0BACZC,SAAUH,OCMHI,EAdA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCkCEC,MAtCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEyBF,mBAAS,IAFlC,mBAENG,EAFM,KAEOC,EAFP,OAGaJ,mBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,KASbC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAASU,MAGbC,QAAQC,IAAIT,KACX,CAACA,IAEJ,IAAMU,EAAed,EAAMe,QAAO,SAAClC,GACjC,OAAOA,EAAMR,KAAK2C,cAAcC,SAASf,EAAYc,kBAGvD,OAAQhB,EAAMkB,OAKZ,sBAAKzC,UAAU,KAAf,UACE,6CACA,wBAAQ0C,QAAS,kBAAMd,EAASD,EAAQ,IAAxC,mBACA,cAAC,EAAD,CAAWjB,UA1BF,SAACiC,GACZjB,EAAeiB,EAAMC,OAAOC,UA0B1B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzC,MAAOiC,SATrB,qBAAKrC,UAAU,KAAf,SACE,4CClBS8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.51bfda68.chunk.js","sourcesContent":["import \"./app.css\";\r\nimport \"tachyons\";\r\nconst Card = ({ name, email, id }) => {\r\n  const img = `https://robohash.org/${id}?size=200x200`;\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={img} alt=\"robo\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst CardList = ({ Robot }) => {\r\n  const cardArray = Robot.map((user, index) => {\r\n    return (\r\n      <Card\r\n        key={index}\r\n        id={Robot[index].id}\r\n        name={Robot[index].name}\r\n        email={Robot[index].email}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardArray}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","const SearchBox = ({ eventCari }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"text\"\r\n        name=\"search\"\r\n        placeholder=\"Search RoboFriends Here\"\r\n        onChange={eventCari}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","const Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"450px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import { useState, useEffect } from \"react\";\nimport CardList from \"./../Components/CardList\";\nimport SearchBox from \"./../Components/SearchBox\";\nimport Scroll from \"./../Components/Scroll\";\n\nfunction App() {\n  const [robot, setRobot] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const cari = (event) => {\n    setSearchField(event.target.value);\n  };\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        setRobot(users);\n      });\n\n    console.log(count);\n  }, [count]);\n\n  const filterRobots = robot.filter((Robot) => {\n    return Robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return !robot.length ? (\n    <div className=\"tc\">\n      <h1>Loading</h1>\n    </div>\n  ) : (\n    <div className=\"tc\">\n      <h1>RoboFriends</h1>\n      <button onClick={() => setCount(count + 1)}>Click</button>\n      <SearchBox eventCari={cari} />\n      <Scroll>\n        <CardList Robot={filterRobots} />\n      </Scroll>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Container/App\";\n// import Navbar from './Navbar';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}